{"version":3,"sources":["message-item.js","message-list.js","input.js","App.js","reportWebVitals.js","index.js"],"names":["MessageItem","className","this","props","user","message","React","Component","Message","messages","map","item","userId","id","Input","e","keyCode","sendMessage","refs","ref","placeholder","onKeyUp","enterKey","onClick","App","state","socket","io","setState","Math","random","on","response","newMessage","m","ids","_map","max","push","data","objMessage","$","scrollHeight","scrollTop","clientHeight","animate","prop","test","value","emit","typing","sendnewMessage","bind","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.019672d4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class MessageItem extends React.Component {\r\n    render () {\r\n        return (\r\n            <li className={this.props.user? \"message right appeared\": \"message left appeared\"}>\r\n                <div className=\"avatar\"></div>\r\n                <div className=\"text_wrapper\">\r\n                    <div className=\"text\">{this.props.message}</div>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport MessageItem from './message-item';\r\n\r\n\r\nexport default class Message extends React.Component {\r\n    render () {\r\n        return (\r\n            <ul className=\"messages\">\r\n                {this.props.messages.map(item =>\r\n                    <MessageItem key={item.id} user={item.userId === this.props.user? true: false} message={item.message}/>\r\n                )}\r\n            </ul>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class Input extends React.Component {\r\n    enterKey(e) {\r\n        if (e.keyCode === 13) {\r\n            this.props.sendMessage(this.refs.message);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div className=\"bottom_wrapper clearfix\">\r\n                <div className=\"message_input_wrapper\">\r\n                    <input ref=\"message\" className=\"message_input\" placeholder=\"Type your message here...\" onKeyUp={(e) => this.enterKey(e)}/>\r\n                </div>\r\n                <div className=\"send_message\" onClick={() => this.props.sendMessage(this.refs.message)}>\r\n                    <div className=\"icon\"></div>\r\n                    <div className=\"text\">Send</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport $ from 'jquery';\nimport Messages from './message-list';\nimport Input from './input';\nimport _map from 'lodash/map';\nimport io from 'socket.io-client';\n\nimport './App.css';\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        //Khởi tạo state,\n        this.state = {\n            messages: [\n                {id: 1, userId: 0, message: 'Hello'}\n            ],\n            user: null,\n        }\n        this.socket = null;\n    }\n    //Connetct với server nodejs, thông qua socket.io\n    componentWillMount() {\n        this.socket = io('localhost:6969');\n        this.setState({user: Math.random()})\n        this.socket.on('newMessage', (response) => {this.newMessage(response)}); //lắng nghe event 'newMessage' và gọi hàm newMessage khi có event\n    }\n    //Khi có tin nhắn mới, sẽ push tin nhắn vào state mesgages, và nó sẽ được render ra màn hình\n    newMessage(m) {\n        const messages = this.state.messages;\n        let ids = _map(messages, 'id');\n        let max = Math.max(...ids);\n        messages.push({\n            id: max+1,\n            userId: m.user,\n            message: m.data\n        });\n\n        let objMessage = $('.messages');\n        if (objMessage[0].scrollHeight - objMessage[0].scrollTop === objMessage[0].clientHeight ) {\n            this.setState({messages});\n            objMessage.animate({ scrollTop: objMessage.prop('scrollHeight') }, 300); //tạo hiệu ứng cuộn khi có tin nhắn mới\n\n        } else {\n            this.setState({messages});\n            if (m.id === this.state.user) {\n                objMessage.animate({ scrollTop: objMessage.prop('scrollHeight') }, 300);\n            }\n        }\n    }\n    //Gửi event socket newMessage với dữ liệu là nội dung tin nhắn\n    sendnewMessage(m) {\n        let myRe = /^ *$/\n        if (!myRe.test(m.value)) {\n            this.socket.emit(\"newMessage\", {data: m.value, user:this.state.user }); //gửi event về server\n            m.value = \"\"; \n        }\n        else {m.value=\"\"}\n    }\n\n\n    render () {\n        return (\n           <div className=\"app__content\">\n              <h3>chat</h3>\n              <div className=\"chat_window\">\n                  <Messages user={this.state.user} messages={this.state.messages} typing={this.state.typing}/>\n                  <Input sendMessage={this.sendnewMessage.bind(this)}/>\n              </div>\n            </div>\n        )\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}